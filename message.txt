message案例：
  安装模块(使用cnpm安装)
    body-parser
    ejs
    express
    express-session
    formidable
    gm
    mongoose
    silly-datetime

  结构： 
    avatar/  保存用户头像
    model/   数据层，用于操作数据库
    public/  
    route/   路由
    uploads/ 用户头像上传临时保存位置
    views/   




PS:
  dependencies会将项目中所有的依赖记录下来
  在发送文件时可以不用发node_modeules文件夹(文件太多，影响速度)
  使用npm install 或 cnpm install
  会自动将dependencies中的依赖全部下载下来




  1. 代码分层，除/请求外，主要分为msg和user两大类，分别处理留言以及用户相关的请求
    1.1 /msg请求类，定义message.js，msg路由
      /请求跳转到/msg，路由读取message集合中的数据，返回给index页面解析显示
    1.2 /msg/tijiao，post请求
      获取留言的数据(username和message)，将其保存在数据库，并重定向到/请求
    1.3 /msg/del，删除指定留言
      get方式传递id，获取id将其转换为ObjectID类型，根据_id去数据库中删除数据
    1.4 /msg/update，跳转更新页面
      get请求，根据留言的id查询留言相关数据，发送给修改页面
    1.5 /msg/update，修改
      post请求，获取数据，根据id修改数据库中的数据
  
  2. user类请求
    2.1 /user/regist，跳转注册页面
      get请求
    2.2 /user/regist，注册
      post请求
      检查用户名与密码的规范，密码加密
      ajax请求发送
      成功注册后设置登录状态
    2.3 /user/login，跳转登陆页面
      get请求，跳转到登录页面
    2.4 /user/login，登录请求
      post请求，检查用户名密码，设置登录状态
    2.5 /user/logout，退出登录
    2.6 配置登录验证
      app.use(check)
      请求放行条件：已登录，注册请求，登录请求，以及注册时的检查用户名是否占用请求
    2.7 /user/center，跳转到个人中心
      根据username获取信息，发送到页面解析
    2.8 /user/updateNickname
      get请求，通过按钮点击产生的input的onblur事件发送，修改昵称
    2.9 /user/updatePassword
      get请求，跳转到修改页面，输入新旧密码
      post请求，获取新旧密码，判断旧密码是否正确，加密，更新
    2.10 /user/upload
      get请求，跳转到上传图片页面
      post请求，发送请求，后台获取数据，并将数据转发给剪切页面
    2.11 /user/cut
      get请求，点击按钮发送ajax
      传递剪切图片需要的5个数据(注意文件的命名)
    
